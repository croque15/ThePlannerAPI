// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ThePlannerAPI.Data;

#nullable disable

namespace ThePlannerAPI.Migrations
{
    [DbContext(typeof(PlannerDbContext))]
    [Migration("20250718221806_InitWithSQLite")]
    partial class InitWithSQLite
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("ThePlannerAPI.Models.PlannerEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ArrivalPort")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DeparturePort")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EditBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCTS")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JobCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("JobID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PlannerEventTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ResourceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ShipName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("TravelDays")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlannerEventTypeId");

                    b.HasIndex("ResourceId");

                    b.ToTable("PlannerEvents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArrivalPort = "Port B",
                            ClientName = "Client 1",
                            Color = "#FFCC00",
                            DeparturePort = "Port A",
                            Description = "Description for Event 1",
                            EditBy = "System",
                            EndDate = new DateTime(2025, 7, 19, 2, 0, 0, 0, DateTimeKind.Local),
                            IsCTS = false,
                            JobCode = "J001",
                            JobID = 1001,
                            Name = "Event 1",
                            PlannerEventTypeId = 2,
                            ResourceId = 2,
                            ShipName = "Ship 1",
                            StartDate = new DateTime(2025, 7, 19, 0, 0, 0, 0, DateTimeKind.Local),
                            TravelDays = 1
                        },
                        new
                        {
                            Id = 2,
                            ArrivalPort = "Port B",
                            ClientName = "Client 2",
                            Color = "#FFCC00",
                            DeparturePort = "Port A",
                            Description = "Description for Event 2",
                            EditBy = "System",
                            EndDate = new DateTime(2025, 7, 20, 2, 0, 0, 0, DateTimeKind.Local),
                            IsCTS = true,
                            JobCode = "J002",
                            JobID = 1002,
                            Name = "Event 2",
                            PlannerEventTypeId = 3,
                            ResourceId = 3,
                            ShipName = "Ship 2",
                            StartDate = new DateTime(2025, 7, 20, 0, 0, 0, 0, DateTimeKind.Local),
                            TravelDays = 2
                        },
                        new
                        {
                            Id = 3,
                            ArrivalPort = "Port B",
                            ClientName = "Client 3",
                            Color = "#FFCC00",
                            DeparturePort = "Port A",
                            Description = "Description for Event 3",
                            EditBy = "System",
                            EndDate = new DateTime(2025, 7, 21, 2, 0, 0, 0, DateTimeKind.Local),
                            IsCTS = false,
                            JobCode = "J003",
                            JobID = 1003,
                            Name = "Event 3",
                            PlannerEventTypeId = 4,
                            ResourceId = 4,
                            ShipName = "Ship 3",
                            StartDate = new DateTime(2025, 7, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            TravelDays = 0
                        },
                        new
                        {
                            Id = 4,
                            ArrivalPort = "Port B",
                            ClientName = "Client 4",
                            Color = "#FFCC00",
                            DeparturePort = "Port A",
                            Description = "Description for Event 4",
                            EditBy = "System",
                            EndDate = new DateTime(2025, 7, 22, 2, 0, 0, 0, DateTimeKind.Local),
                            IsCTS = true,
                            JobCode = "J004",
                            JobID = 1004,
                            Name = "Event 4",
                            PlannerEventTypeId = 5,
                            ResourceId = 5,
                            ShipName = "Ship 4",
                            StartDate = new DateTime(2025, 7, 22, 0, 0, 0, 0, DateTimeKind.Local),
                            TravelDays = 1
                        },
                        new
                        {
                            Id = 5,
                            ArrivalPort = "Port B",
                            ClientName = "Client 5",
                            Color = "#FFCC00",
                            DeparturePort = "Port A",
                            Description = "Description for Event 5",
                            EditBy = "System",
                            EndDate = new DateTime(2025, 7, 23, 2, 0, 0, 0, DateTimeKind.Local),
                            IsCTS = false,
                            JobCode = "J005",
                            JobID = 1005,
                            Name = "Event 5",
                            PlannerEventTypeId = 1,
                            ResourceId = 6,
                            ShipName = "Ship 5",
                            StartDate = new DateTime(2025, 7, 23, 0, 0, 0, 0, DateTimeKind.Local),
                            TravelDays = 2
                        },
                        new
                        {
                            Id = 6,
                            ArrivalPort = "Port B",
                            ClientName = "Client 6",
                            Color = "#FFCC00",
                            DeparturePort = "Port A",
                            Description = "Description for Event 6",
                            EditBy = "System",
                            EndDate = new DateTime(2025, 7, 24, 2, 0, 0, 0, DateTimeKind.Local),
                            IsCTS = true,
                            JobCode = "J006",
                            JobID = 1006,
                            Name = "Event 6",
                            PlannerEventTypeId = 2,
                            ResourceId = 7,
                            ShipName = "Ship 6",
                            StartDate = new DateTime(2025, 7, 24, 0, 0, 0, 0, DateTimeKind.Local),
                            TravelDays = 0
                        },
                        new
                        {
                            Id = 7,
                            ArrivalPort = "Port B",
                            ClientName = "Client 7",
                            Color = "#FFCC00",
                            DeparturePort = "Port A",
                            Description = "Description for Event 7",
                            EditBy = "System",
                            EndDate = new DateTime(2025, 7, 25, 2, 0, 0, 0, DateTimeKind.Local),
                            IsCTS = false,
                            JobCode = "J007",
                            JobID = 1007,
                            Name = "Event 7",
                            PlannerEventTypeId = 3,
                            ResourceId = 8,
                            ShipName = "Ship 7",
                            StartDate = new DateTime(2025, 7, 25, 0, 0, 0, 0, DateTimeKind.Local),
                            TravelDays = 1
                        },
                        new
                        {
                            Id = 8,
                            ArrivalPort = "Port B",
                            ClientName = "Client 8",
                            Color = "#FFCC00",
                            DeparturePort = "Port A",
                            Description = "Description for Event 8",
                            EditBy = "System",
                            EndDate = new DateTime(2025, 7, 26, 2, 0, 0, 0, DateTimeKind.Local),
                            IsCTS = true,
                            JobCode = "J008",
                            JobID = 1008,
                            Name = "Event 8",
                            PlannerEventTypeId = 4,
                            ResourceId = 9,
                            ShipName = "Ship 8",
                            StartDate = new DateTime(2025, 7, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            TravelDays = 2
                        },
                        new
                        {
                            Id = 9,
                            ArrivalPort = "Port B",
                            ClientName = "Client 9",
                            Color = "#FFCC00",
                            DeparturePort = "Port A",
                            Description = "Description for Event 9",
                            EditBy = "System",
                            EndDate = new DateTime(2025, 7, 27, 2, 0, 0, 0, DateTimeKind.Local),
                            IsCTS = false,
                            JobCode = "J009",
                            JobID = 1009,
                            Name = "Event 9",
                            PlannerEventTypeId = 5,
                            ResourceId = 10,
                            ShipName = "Ship 9",
                            StartDate = new DateTime(2025, 7, 27, 0, 0, 0, 0, DateTimeKind.Local),
                            TravelDays = 0
                        },
                        new
                        {
                            Id = 10,
                            ArrivalPort = "Port B",
                            ClientName = "Client 10",
                            Color = "#FFCC00",
                            DeparturePort = "Port A",
                            Description = "Description for Event 10",
                            EditBy = "System",
                            EndDate = new DateTime(2025, 7, 28, 2, 0, 0, 0, DateTimeKind.Local),
                            IsCTS = true,
                            JobCode = "J010",
                            JobID = 1010,
                            Name = "Event 10",
                            PlannerEventTypeId = 1,
                            ResourceId = 11,
                            ShipName = "Ship 10",
                            StartDate = new DateTime(2025, 7, 28, 0, 0, 0, 0, DateTimeKind.Local),
                            TravelDays = 1
                        });
                });

            modelBuilder.Entity("ThePlannerAPI.Models.PlannerEventType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PlannerEventTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Working"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Break"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Meeting"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Training"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Travel"
                        });
                });

            modelBuilder.Entity("ThePlannerAPI.Models.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ResourceType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Resources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Resource 1",
                            ResourceType = "Person"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Resource 2",
                            ResourceType = "Person"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Resource 3",
                            ResourceType = "Person"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Resource 4",
                            ResourceType = "Person"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Resource 5",
                            ResourceType = "Person"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Resource 6",
                            ResourceType = "Person"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Resource 7",
                            ResourceType = "Person"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Resource 8",
                            ResourceType = "Person"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Resource 9",
                            ResourceType = "Person"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Resource 10",
                            ResourceType = "Vehicle"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Resource 11",
                            ResourceType = "Vehicle"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Resource 12",
                            ResourceType = "Vehicle"
                        });
                });

            modelBuilder.Entity("ThePlannerAPI.Models.PlannerEvent", b =>
                {
                    b.HasOne("ThePlannerAPI.Models.PlannerEventType", "PlannerEventType")
                        .WithMany()
                        .HasForeignKey("PlannerEventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ThePlannerAPI.Models.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlannerEventType");

                    b.Navigation("Resource");
                });
#pragma warning restore 612, 618
        }
    }
}
